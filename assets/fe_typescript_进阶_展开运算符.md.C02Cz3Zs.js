import{_ as r}from"./chunks/ArticleMetadata.DwOS4yrW.js";import{_ as p,D as o,c,I as d,w as h,j as t,a as k,a9 as m,o as i,b as u,e as _}from"./chunks/framework.B6pjmo9y.js";const T=JSON.parse('{"title":"展开运算符","description":"","frontmatter":{"title":"展开运算符","author":"hualess","date":"2024/05/21 21:29","categories":["ts"],"tags":["ts","前端","进阶"]},"headers":[],"relativePath":"fe/typescript/进阶/展开运算符.md","filePath":"fe/typescript/进阶/展开运算符.md","lastUpdated":1716434902000}'),g={name:"fe/typescript/进阶/展开运算符.md"},y=t("h1",{id:"展开运算符",tabindex:"-1"},[k("展开运算符 "),t("a",{class:"header-anchor",href:"#展开运算符","aria-label":'Permalink to "展开运算符"'},"​")],-1),A=m('<div class="tip custom-block"><p class="custom-block-title">TIP</p><p>在 JavaScript 和 TypeScript 中，...（展开运算符）是一个非常有用的操作符，它允许你将一个可迭代对象（如数组或对象）的元素展开到另一个位置，如数组字面量、函数调用的参数列表或对象字面量中。</p></div><p>在你的例子中，...user 是在对象字面量的上下文中使用的，这意味着它会将 user 对象的所有可枚举自有属性展开为独立的键值对。换句话说，...user 将 user 对象的属性解构并直接插入到新对象中，这在复制或合并对象时特别有用，同时可以方便地添加或修改某些属性，如你代码中给 email 添加域名后缀的例子。</p><p>具体到这段代码：</p><div class="language-js vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">return</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> {</span></span>\n<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">  ...</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">user,</span></span>\n<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">  email: </span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">`${</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">user</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">.</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">email</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">}@example.com`</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">,</span></span>\n<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><p>这行代码创建了一个新对象，首先通过 ...user 展开 user 对象的所有属性，然后单独设置了 email 属性，将其值更新为原 email 后加上 &quot;@example.com&quot;。这样，如果 user 对象有其他属性（比如 id 和 name），它们也会被保留在新对象中，而不仅仅是修改了 email。</p>',5);function b(s,f,C,D,v,B){const n=r,l=o("ClientOnly");return i(),c("div",null,[y,d(l,null,{default:h(()=>{var e,a;return[(((e=s.$frontmatter)==null?void 0:e.aside)??!0)&&(((a=s.$frontmatter)==null?void 0:a.showArticleMetadata)??!0)?(i(),u(n,{key:0,article:s.$frontmatter},null,8,["article"])):_("",!0)]}),_:1}),A])}const $=p(g,[["render",b]]);export{T as __pageData,$ as default};
